// Variables 
var mongoose = require('mongoose'); // pour pouvoir utiliser mongoose
var db = mongoose.connection; // connexion à notre base de données mongo
db.on('error', console.error.bind(console, 'connection error:')); // une erreur est affiché à la connexion
db.once('open', function() {});

/* Collection "joueur" avec dedans le pseudo, le mot de passe et le nombre de victoires */

var player = new mongoose.Schema({
  pseudo: {type: String, minlength:3, maxlength: 15},
  password: {type:String},
  wins: {type:Number, min:0}, 
});

var Player = mongoose.model('Player', player);


/* Collection "resultats" avec dedans la date de la partie le pseudo des participants et le pseudo du vainqueur */
var resultat = new mongoose.Schema({
    date: {type:Date, default: Date.now},
    player1: player,
    player2: player,
    winner: player,
});

var Game = mongoose.model('Game', resultat);

/* Fonction pour ajouter un joueur à notre bdd "joueur" */

function addPlayer(pseudoP, passwordP, winsP){
    var newPlayer = new player({pseudo: pseudoP, password:passwordP, wins: winsP });
    newPlayer.save(function (err) {
        if (err) { throw err; }
        else{
          console.log(newPlayer.pseudo + ' a été ajouté avec succès');
        }
    });
  }

/* Fonction permettant de rechercher un joueur grâce à son pseudo  */

function findPlayerByPseudo(PlayerPseudo){
  const res = await player.find({pseudo: PlayerPseudo}, function (err, comms) {
    if (err) { throw err; }
    else{
    } 
  });
  if(res.length!=0){
    return res[0];
  }
  else{
    return false;
  }
 }

 /* Fonction pour trouver tous les joueurs présents dans la base de données/collection joueur */
function findAllPlayers(){
  var res = await Player.find({}, function (err, comms) {
    if (err) { throw err; }
    else{
    }
  });
  return res;
 }


/* Fonction pour mettre à jour le nombre de victoires du joueur */
 function updatePlayerWins(Pseudo, NewWins){
   player = findPlayerByPseudo(Pseudo);
   player.rating=NewWins;
   player.save();
 }

 /* Fonction pour se connecter grâce au pseudo et password */
 function logIn(pseudo,password){
    var joueur = await dbMongo.findPlayerByPseudo(pseudo);
    if(joueur==false){
      console.log("cas ajout");
        dbMongo.addPlayer(pseudo,password,0);
        return true;
    }
    else{
      if(joueur.password==password){
        console.log("cas password match");
        return true;
      }
      else{
        console.log("cas password unmatch");
        return false;
      }
    }
    console.log(joueur.pseudo);
}




